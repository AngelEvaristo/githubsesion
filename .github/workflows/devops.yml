name: GITHUBnpm

run-name: "GITHUB NPM"

on:
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches: [ "main" ]
  # schedule:
  #   - cron: "50 0 * * *"           
  # workflow_dispatch: {}
  workflow_dispatch:
    inputs:
      version:
        description: "Versión de la app"
        required: false
        default: "latest"  
#(1)
jobs:
  docker-job:
    runs-on: ubuntu-latest
    steps:
      - name: Run a Docker action (Alpine)
        uses: docker://alpine:3.18
        with:
          args: echo "Hola desde Alpine dentro de GitHub Actions"

  Compilacion:
    runs-on: ubuntu-latest
    # outputs:
    #   version: ${{ steps.extract_version.outputs.version }}    
    steps:
      - uses: actions/checkout@v4  

      - name: Setear versión de Node
        uses: actions/setup-node@v4
        with:
          node-version: "${{ inputs.version }}"   # Cambia a la versión que necesites
          cache: 'npm'         # Opcional: cachea dependencias npm

      - name: Instalar dependencias
        run: |
          echo "Versión: ${{ inputs.version }}"
          npm install -g @angular/cli
          npm install

      - name: Compilar aplicación
        run: ng build --configuration production

      # - name: Crear archivo ZIP con PowerShell
      #   shell: pwsh
      #   run: |
      #     if (Test-Path app.zip) { Remove-Item app.zip -Force }
      #     Push-Location dist/my-first-angular-app/browser
      #     Compress-Archive -Path * -DestinationPath $env:GITHUB_WORKSPACE/app.zip
      #     Pop-Location
##AWS ####
      # 2. Configurar credenciales AWS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1   # 👈 ajusta a tu región

      # 3. Sincronizar archivos con S3
      - name: Sync files to S3
        run: |
          cd dist/my-first-angular-app/browser
          dir
          aws s3 rm s3://sesion2s3front --recursive
          aws s3 sync . s3://sesion2s3front
          aws s3 ls s3://sesion2s3front               
#######

#COMPOSE
      - name: Crear ZIP usando composite action
        uses: ./.github/actions/createzip
        with:
          source: dist/my-first-angular-app/browser
          output: app.zip

      - name: Publicar artefacto
        uses: actions/upload-artifact@v4
        with:
          name: app-zip2
          path: app.zip

## REUSABLE 
  # call-build:
  #   uses: ./.github/workflows/reusable.yml
  #   with:
  #     app-name: "mi-webapp-angular"
  #     source-path: "dist/my-first-angular-app/browser"
  call-build:
    uses: AngelEvaristo/templatestest/.github/workflows/template.yml@main
    with:
      app-name: "mi-webapp-angular"
      source-path: "dist/my-first-angular-app/browser"  

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: Compilacion
  #   steps:
  # #     - name: Descargar artefacto
  # #       uses: actions/download-artifact@v4
  # #       with:
  # #         name: app-zip
  # #         path: .

  #     - name: Login en Azure
  #       uses: azure/login@v2
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}

  # #     - name: Deploy al Web App
  # #       uses: azure/webapps-deploy@v3
  # #       with:
  # #         app-name: "sesion3front"   # reemplaza con el nombre real
  # #         package: app.zip
  #     - name: Deploy to Web App
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: "pruebarapidaacr"   # 👈 Nombre de tu Web App
  #         images: devopspruebatecylab.azurecr.io/minimalapi:1.2.7  
          